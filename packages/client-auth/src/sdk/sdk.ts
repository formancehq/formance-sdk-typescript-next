/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { info } from "../funcs/info.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Clients } from "./clients.js";
import { Secrets } from "./secrets.js";
import { Users } from "./users.js";

export class AuthClient extends ClientSDK {
    private _clients?: Clients;
    get clients(): Clients {
        return (this._clients ??= new Clients(this.options$));
    }

    private _users?: Users;
    get users(): Users {
        return (this._users ??= new Users(this.options$));
    }

    private _secrets?: Secrets;
    get secrets(): Secrets {
        return (this._secrets ??= new Secrets(this.options$));
    }

    async info(options?: RequestOptions): Promise<components.ServerInfo> {
        return unwrapAsync(info(this, options));
    }
}
