/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UsersListRequest = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type UsersListCursor = {
    next?: string | undefined;
    data: Array<components.User>;
};

/**
 * The request has succeeded.
 */
export type UsersListResponseBody = {
    cursor: UsersListCursor;
};

export type UsersListResponse = {
    result: UsersListResponseBody;
};

/** @internal */
export const UsersListRequest$inboundSchema: z.ZodType<UsersListRequest, z.ZodTypeDef, unknown> =
    z.object({
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });

/** @internal */
export type UsersListRequest$Outbound = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

/** @internal */
export const UsersListRequest$outboundSchema: z.ZodType<
    UsersListRequest$Outbound,
    z.ZodTypeDef,
    UsersListRequest
> = z.object({
    cursor: z.string().optional(),
    pageSize: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersListRequest$ {
    /** @deprecated use `UsersListRequest$inboundSchema` instead. */
    export const inboundSchema = UsersListRequest$inboundSchema;
    /** @deprecated use `UsersListRequest$outboundSchema` instead. */
    export const outboundSchema = UsersListRequest$outboundSchema;
    /** @deprecated use `UsersListRequest$Outbound` instead. */
    export type Outbound = UsersListRequest$Outbound;
}

/** @internal */
export const UsersListCursor$inboundSchema: z.ZodType<UsersListCursor, z.ZodTypeDef, unknown> =
    z.object({
        next: z.string().optional(),
        data: z.array(components.User$inboundSchema),
    });

/** @internal */
export type UsersListCursor$Outbound = {
    next?: string | undefined;
    data: Array<components.User$Outbound>;
};

/** @internal */
export const UsersListCursor$outboundSchema: z.ZodType<
    UsersListCursor$Outbound,
    z.ZodTypeDef,
    UsersListCursor
> = z.object({
    next: z.string().optional(),
    data: z.array(components.User$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersListCursor$ {
    /** @deprecated use `UsersListCursor$inboundSchema` instead. */
    export const inboundSchema = UsersListCursor$inboundSchema;
    /** @deprecated use `UsersListCursor$outboundSchema` instead. */
    export const outboundSchema = UsersListCursor$outboundSchema;
    /** @deprecated use `UsersListCursor$Outbound` instead. */
    export type Outbound = UsersListCursor$Outbound;
}

/** @internal */
export const UsersListResponseBody$inboundSchema: z.ZodType<
    UsersListResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.lazy(() => UsersListCursor$inboundSchema),
});

/** @internal */
export type UsersListResponseBody$Outbound = {
    cursor: UsersListCursor$Outbound;
};

/** @internal */
export const UsersListResponseBody$outboundSchema: z.ZodType<
    UsersListResponseBody$Outbound,
    z.ZodTypeDef,
    UsersListResponseBody
> = z.object({
    cursor: z.lazy(() => UsersListCursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersListResponseBody$ {
    /** @deprecated use `UsersListResponseBody$inboundSchema` instead. */
    export const inboundSchema = UsersListResponseBody$inboundSchema;
    /** @deprecated use `UsersListResponseBody$outboundSchema` instead. */
    export const outboundSchema = UsersListResponseBody$outboundSchema;
    /** @deprecated use `UsersListResponseBody$Outbound` instead. */
    export type Outbound = UsersListResponseBody$Outbound;
}

/** @internal */
export const UsersListResponse$inboundSchema: z.ZodType<UsersListResponse, z.ZodTypeDef, unknown> =
    z
        .object({
            Result: z.lazy(() => UsersListResponseBody$inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

/** @internal */
export type UsersListResponse$Outbound = {
    Result: UsersListResponseBody$Outbound;
};

/** @internal */
export const UsersListResponse$outboundSchema: z.ZodType<
    UsersListResponse$Outbound,
    z.ZodTypeDef,
    UsersListResponse
> = z
    .object({
        result: z.lazy(() => UsersListResponseBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersListResponse$ {
    /** @deprecated use `UsersListResponse$inboundSchema` instead. */
    export const inboundSchema = UsersListResponse$inboundSchema;
    /** @deprecated use `UsersListResponse$outboundSchema` instead. */
    export const outboundSchema = UsersListResponse$outboundSchema;
    /** @deprecated use `UsersListResponse$Outbound` instead. */
    export type Outbound = UsersListResponse$Outbound;
}
