/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SecretsDeleteRequest = {
    clientId: string;
    secretId: string;
};

/** @internal */
export const SecretsDeleteRequest$inboundSchema: z.ZodType<
    SecretsDeleteRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    clientId: z.string(),
    secretId: z.string(),
});

/** @internal */
export type SecretsDeleteRequest$Outbound = {
    clientId: string;
    secretId: string;
};

/** @internal */
export const SecretsDeleteRequest$outboundSchema: z.ZodType<
    SecretsDeleteRequest$Outbound,
    z.ZodTypeDef,
    SecretsDeleteRequest
> = z.object({
    clientId: z.string(),
    secretId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SecretsDeleteRequest$ {
    /** @deprecated use `SecretsDeleteRequest$inboundSchema` instead. */
    export const inboundSchema = SecretsDeleteRequest$inboundSchema;
    /** @deprecated use `SecretsDeleteRequest$outboundSchema` instead. */
    export const outboundSchema = SecretsDeleteRequest$outboundSchema;
    /** @deprecated use `SecretsDeleteRequest$Outbound` instead. */
    export type Outbound = SecretsDeleteRequest$Outbound;
}
