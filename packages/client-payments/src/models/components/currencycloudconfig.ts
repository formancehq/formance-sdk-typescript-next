/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CurrencyCloudConfig = {
    name: string;
    apiKey: string;
    loginID: string;
    /**
     * The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
     */
    pollingPeriod?: string | undefined;
    /**
     * The endpoint to use for the API
     */
    endpoint?: string | undefined;
};

/** @internal */
export namespace CurrencyCloudConfig$ {
    export const inboundSchema: z.ZodType<CurrencyCloudConfig, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            apiKey: z.string(),
            loginID: z.string(),
            pollingPeriod: z.string().default("120s"),
            endpoint: z.string().default("https://devapi.currencycloud.com"),
        })
        .transform((v) => {
            return {
                name: v.name,
                apiKey: v.apiKey,
                loginID: v.loginID,
                pollingPeriod: v.pollingPeriod,
                endpoint: v.endpoint,
            };
        });

    export type Outbound = {
        name: string;
        apiKey: string;
        loginID: string;
        pollingPeriod: string;
        endpoint: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CurrencyCloudConfig> = z
        .object({
            name: z.string(),
            apiKey: z.string(),
            loginID: z.string(),
            pollingPeriod: z.string().default("120s"),
            endpoint: z.string().default("https://devapi.currencycloud.com"),
        })
        .transform((v) => {
            return {
                name: v.name,
                apiKey: v.apiKey,
                loginID: v.loginID,
                pollingPeriod: v.pollingPeriod,
                endpoint: v.endpoint,
            };
        });
}
