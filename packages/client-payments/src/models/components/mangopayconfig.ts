/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type MangoPayConfig = {
    name: string;
    /**
     * The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
     */
    pollingPeriod?: string | undefined;
    clientID: string;
    apiKey: string;
    endpoint: string;
};

/** @internal */
export namespace MangoPayConfig$ {
    export const inboundSchema: z.ZodType<MangoPayConfig, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
        clientID: z.string(),
        apiKey: z.string(),
        endpoint: z.string(),
    });

    export type Outbound = {
        name: string;
        pollingPeriod: string;
        clientID: string;
        apiKey: string;
        endpoint: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MangoPayConfig> = z.object({
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
        clientID: z.string(),
        apiKey: z.string(),
        endpoint: z.string(),
    });
}
