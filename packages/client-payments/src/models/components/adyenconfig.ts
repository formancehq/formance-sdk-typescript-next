/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AdyenConfig = {
    name: string;
    /**
     * The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
     */
    pollingPeriod?: string | undefined;
    apiKey: string;
    hmacKey: string;
    liveEndpointPrefix?: string | undefined;
};

/** @internal */
export namespace AdyenConfig$ {
    export const inboundSchema: z.ZodType<AdyenConfig, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
        apiKey: z.string(),
        hmacKey: z.string(),
        liveEndpointPrefix: z.string().optional(),
    });

    export type Outbound = {
        name: string;
        pollingPeriod: string;
        apiKey: string;
        hmacKey: string;
        liveEndpointPrefix?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AdyenConfig> = z.object({
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
        apiKey: z.string(),
        hmacKey: z.string(),
        liveEndpointPrefix: z.string().optional(),
    });
}
