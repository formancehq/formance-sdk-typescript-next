/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PaymentsV1UpdateMetatdataRequest = {
    paymentId: string;
    requestBody: { [k: string]: string };
};

/** @internal */
export namespace PaymentsV1UpdateMetatdataRequest$ {
    export const inboundSchema: z.ZodType<PaymentsV1UpdateMetatdataRequest, z.ZodTypeDef, unknown> =
        z
            .object({
                paymentId: z.string(),
                RequestBody: z.record(z.string()),
            })
            .transform((v) => {
                return {
                    paymentId: v.paymentId,
                    requestBody: v.RequestBody,
                };
            });

    export type Outbound = {
        paymentId: string;
        RequestBody: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaymentsV1UpdateMetatdataRequest
    > = z
        .object({
            paymentId: z.string(),
            requestBody: z.record(z.string()),
        })
        .transform((v) => {
            return {
                paymentId: v.paymentId,
                RequestBody: v.requestBody,
            };
        });
}
