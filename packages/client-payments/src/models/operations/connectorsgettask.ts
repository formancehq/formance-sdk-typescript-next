/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ConnectorsGetTaskRequest = {
    connector: components.Connector;
    connectorId: string;
    taskId: string;
};

export type ConnectorsGetTaskData =
    | components.TaskStripe
    | components.TaskWise
    | components.TaskCurrencyCloud
    | components.TaskDummyPay
    | components.TaskModulr
    | components.TaskBankingCircle
    | components.TaskMangoPay
    | components.TaskMoneyCorp;

/**
 * The request has succeeded.
 */
export type ConnectorsGetTaskResponseBody = {
    data:
        | components.TaskStripe
        | components.TaskWise
        | components.TaskCurrencyCloud
        | components.TaskDummyPay
        | components.TaskModulr
        | components.TaskBankingCircle
        | components.TaskMangoPay
        | components.TaskMoneyCorp;
};

/** @internal */
export namespace ConnectorsGetTaskRequest$ {
    export const inboundSchema: z.ZodType<ConnectorsGetTaskRequest, z.ZodTypeDef, unknown> =
        z.object({
            connector: components.Connector$.inboundSchema,
            connectorId: z.string(),
            taskId: z.string(),
        });

    export type Outbound = {
        connector: string;
        connectorId: string;
        taskId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsGetTaskRequest> =
        z.object({
            connector: components.Connector$.outboundSchema,
            connectorId: z.string(),
            taskId: z.string(),
        });
}

/** @internal */
export namespace ConnectorsGetTaskData$ {
    export const inboundSchema: z.ZodType<ConnectorsGetTaskData, z.ZodTypeDef, unknown> = z.union([
        components.TaskStripe$.inboundSchema,
        components.TaskWise$.inboundSchema,
        components.TaskCurrencyCloud$.inboundSchema,
        components.TaskDummyPay$.inboundSchema,
        components.TaskModulr$.inboundSchema,
        components.TaskBankingCircle$.inboundSchema,
        components.TaskMangoPay$.inboundSchema,
        components.TaskMoneyCorp$.inboundSchema,
    ]);

    export type Outbound =
        | components.TaskStripe$.Outbound
        | components.TaskWise$.Outbound
        | components.TaskCurrencyCloud$.Outbound
        | components.TaskDummyPay$.Outbound
        | components.TaskModulr$.Outbound
        | components.TaskBankingCircle$.Outbound
        | components.TaskMangoPay$.Outbound
        | components.TaskMoneyCorp$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsGetTaskData> = z.union(
        [
            components.TaskStripe$.outboundSchema,
            components.TaskWise$.outboundSchema,
            components.TaskCurrencyCloud$.outboundSchema,
            components.TaskDummyPay$.outboundSchema,
            components.TaskModulr$.outboundSchema,
            components.TaskBankingCircle$.outboundSchema,
            components.TaskMangoPay$.outboundSchema,
            components.TaskMoneyCorp$.outboundSchema,
        ]
    );
}

/** @internal */
export namespace ConnectorsGetTaskResponseBody$ {
    export const inboundSchema: z.ZodType<ConnectorsGetTaskResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: z.union([
                components.TaskStripe$.inboundSchema,
                components.TaskWise$.inboundSchema,
                components.TaskCurrencyCloud$.inboundSchema,
                components.TaskDummyPay$.inboundSchema,
                components.TaskModulr$.inboundSchema,
                components.TaskBankingCircle$.inboundSchema,
                components.TaskMangoPay$.inboundSchema,
                components.TaskMoneyCorp$.inboundSchema,
            ]),
        });

    export type Outbound = {
        data:
            | components.TaskStripe$.Outbound
            | components.TaskWise$.Outbound
            | components.TaskCurrencyCloud$.Outbound
            | components.TaskDummyPay$.Outbound
            | components.TaskModulr$.Outbound
            | components.TaskBankingCircle$.Outbound
            | components.TaskMangoPay$.Outbound
            | components.TaskMoneyCorp$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsGetTaskResponseBody> =
        z.object({
            data: z.union([
                components.TaskStripe$.outboundSchema,
                components.TaskWise$.outboundSchema,
                components.TaskCurrencyCloud$.outboundSchema,
                components.TaskDummyPay$.outboundSchema,
                components.TaskModulr$.outboundSchema,
                components.TaskBankingCircle$.outboundSchema,
                components.TaskMangoPay$.outboundSchema,
                components.TaskMoneyCorp$.outboundSchema,
            ]),
        });
}
