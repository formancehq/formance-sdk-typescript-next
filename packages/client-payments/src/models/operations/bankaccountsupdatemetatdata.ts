/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type BankAccountsUpdateMetatdataRequestBody = {
    metadata: { [k: string]: string };
};

export type BankAccountsUpdateMetatdataRequest = {
    bankAccountId: string;
    requestBody: BankAccountsUpdateMetatdataRequestBody;
};

/** @internal */
export namespace BankAccountsUpdateMetatdataRequestBody$ {
    export const inboundSchema: z.ZodType<
        BankAccountsUpdateMetatdataRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        metadata: z.record(z.string()),
    });

    export type Outbound = {
        metadata: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        BankAccountsUpdateMetatdataRequestBody
    > = z.object({
        metadata: z.record(z.string()),
    });
}

/** @internal */
export namespace BankAccountsUpdateMetatdataRequest$ {
    export const inboundSchema: z.ZodType<
        BankAccountsUpdateMetatdataRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            bankAccountId: z.string(),
            RequestBody: z.lazy(() => BankAccountsUpdateMetatdataRequestBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        bankAccountId: string;
        RequestBody: BankAccountsUpdateMetatdataRequestBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        BankAccountsUpdateMetatdataRequest
    > = z
        .object({
            bankAccountId: z.string(),
            requestBody: z.lazy(() => BankAccountsUpdateMetatdataRequestBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                requestBody: "RequestBody",
            });
        });
}
