/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type TransferInitiationsListRequest = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
    sort?: Array<string> | undefined;
    query?: { [k: string]: any } | undefined;
};

export type TransferInitiationsListCursor = {
    next?: string | undefined;
    data: Array<components.TransferInitiation>;
};

/**
 * The request has succeeded.
 */
export type TransferInitiationsListResponseBody = {
    cursor: TransferInitiationsListCursor;
};

export type TransferInitiationsListResponse = {
    result: TransferInitiationsListResponseBody;
};

/** @internal */
export namespace TransferInitiationsListRequest$ {
    export const inboundSchema: z.ZodType<TransferInitiationsListRequest, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.string().optional(),
            pageSize: z.number().int().optional(),
            sort: z.array(z.string()).optional(),
            query: z.record(z.any()).optional(),
        });

    export type Outbound = {
        cursor?: string | undefined;
        pageSize?: number | undefined;
        sort?: Array<string> | undefined;
        query?: { [k: string]: any } | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransferInitiationsListRequest> =
        z.object({
            cursor: z.string().optional(),
            pageSize: z.number().int().optional(),
            sort: z.array(z.string()).optional(),
            query: z.record(z.any()).optional(),
        });
}

/** @internal */
export namespace TransferInitiationsListCursor$ {
    export const inboundSchema: z.ZodType<TransferInitiationsListCursor, z.ZodTypeDef, unknown> =
        z.object({
            next: z.string().optional(),
            data: z.array(components.TransferInitiation$.inboundSchema),
        });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.TransferInitiation$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransferInitiationsListCursor> =
        z.object({
            next: z.string().optional(),
            data: z.array(components.TransferInitiation$.outboundSchema),
        });
}

/** @internal */
export namespace TransferInitiationsListResponseBody$ {
    export const inboundSchema: z.ZodType<
        TransferInitiationsListResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        cursor: z.lazy(() => TransferInitiationsListCursor$.inboundSchema),
    });

    export type Outbound = {
        cursor: TransferInitiationsListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TransferInitiationsListResponseBody
    > = z.object({
        cursor: z.lazy(() => TransferInitiationsListCursor$.outboundSchema),
    });
}

/** @internal */
export namespace TransferInitiationsListResponse$ {
    export const inboundSchema: z.ZodType<TransferInitiationsListResponse, z.ZodTypeDef, unknown> =
        z
            .object({
                Result: z.lazy(() => TransferInitiationsListResponseBody$.inboundSchema),
            })
            .transform((v) => {
                return remap$(v, {
                    Result: "result",
                });
            });

    export type Outbound = {
        Result: TransferInitiationsListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TransferInitiationsListResponse
    > = z
        .object({
            result: z.lazy(() => TransferInitiationsListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
