/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ConnectorsV1UninstallRequest = {
    connector: components.Connector;
    connectorID: string;
};

/** @internal */
export namespace ConnectorsV1UninstallRequest$ {
    export const inboundSchema: z.ZodType<ConnectorsV1UninstallRequest, z.ZodTypeDef, unknown> = z
        .object({
            connector: components.Connector$.inboundSchema,
            connectorID: z.string(),
        })
        .transform((v) => {
            return {
                connector: v.connector,
                connectorID: v.connectorID,
            };
        });

    export type Outbound = {
        connector: string;
        connectorID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsV1UninstallRequest> = z
        .object({
            connector: components.Connector$.outboundSchema,
            connectorID: z.string(),
        })
        .transform((v) => {
            return {
                connector: v.connector,
                connectorID: v.connectorID,
            };
        });
}
