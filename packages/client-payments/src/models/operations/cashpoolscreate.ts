/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CashPoolsCreateRequestBody = {
    name: string;
    accountIDs: Array<string>;
};

/**
 * The request has succeeded.
 */
export type CashPoolsCreateResponseBody = {
    data: components.CashPool;
};

/** @internal */
export namespace CashPoolsCreateRequestBody$ {
    export const inboundSchema: z.ZodType<CashPoolsCreateRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            name: z.string(),
            accountIDs: z.array(z.string()),
        });

    export type Outbound = {
        name: string;
        accountIDs: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsCreateRequestBody> =
        z.object({
            name: z.string(),
            accountIDs: z.array(z.string()),
        });
}

/** @internal */
export namespace CashPoolsCreateResponseBody$ {
    export const inboundSchema: z.ZodType<CashPoolsCreateResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: components.CashPool$.inboundSchema,
        });

    export type Outbound = {
        data: components.CashPool$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsCreateResponseBody> =
        z.object({
            data: components.CashPool$.outboundSchema,
        });
}
