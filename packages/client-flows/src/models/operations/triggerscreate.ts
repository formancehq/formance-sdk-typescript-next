/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type TriggersCreateRequestBody = {
    event: string;
    workflowId: string;
    filter?: string | undefined;
    vars?: { [k: string]: any } | undefined;
    name?: string | undefined;
};

/**
 * The request has succeeded and a new resource has been created as a result.
 */
export type TriggersCreateResponseBody = {
    data: components.Trigger;
};

/** @internal */
export namespace TriggersCreateRequestBody$ {
    export const inboundSchema: z.ZodType<TriggersCreateRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            event: z.string(),
            workflowId: z.string(),
            filter: z.string().optional(),
            vars: z.record(z.any()).optional(),
            name: z.string().optional(),
        });

    export type Outbound = {
        event: string;
        workflowId: string;
        filter?: string | undefined;
        vars?: { [k: string]: any } | undefined;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersCreateRequestBody> =
        z.object({
            event: z.string(),
            workflowId: z.string(),
            filter: z.string().optional(),
            vars: z.record(z.any()).optional(),
            name: z.string().optional(),
        });
}

/** @internal */
export namespace TriggersCreateResponseBody$ {
    export const inboundSchema: z.ZodType<TriggersCreateResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: components.Trigger$.inboundSchema,
        });

    export type Outbound = {
        data: components.Trigger$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersCreateResponseBody> =
        z.object({
            data: components.Trigger$.outboundSchema,
        });
}
