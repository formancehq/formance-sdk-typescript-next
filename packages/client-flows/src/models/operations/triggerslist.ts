/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TriggersListRequest = {
    name?: string | undefined;
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type TriggersListCursor = {
    next?: string | undefined;
    data: Array<Array<components.Trigger>>;
};

/**
 * The request has succeeded.
 */
export type TriggersListResponseBody = {
    cursor: TriggersListCursor;
};

export type TriggersListResponse = {
    result: TriggersListResponseBody;
};

/** @internal */
export namespace TriggersListRequest$ {
    export const inboundSchema: z.ZodType<TriggersListRequest, z.ZodTypeDef, unknown> = z.object({
        name: z.string().optional(),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });

    export type Outbound = {
        name?: string | undefined;
        cursor?: string | undefined;
        pageSize?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersListRequest> = z.object({
        name: z.string().optional(),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });
}

/** @internal */
export namespace TriggersListCursor$ {
    export const inboundSchema: z.ZodType<TriggersListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(z.array(components.Trigger$.inboundSchema)),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<Array<components.Trigger$.Outbound>>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersListCursor> = z.object({
        next: z.string().optional(),
        data: z.array(z.array(components.Trigger$.outboundSchema)),
    });
}

/** @internal */
export namespace TriggersListResponseBody$ {
    export const inboundSchema: z.ZodType<TriggersListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => TriggersListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: TriggersListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersListResponseBody> =
        z.object({
            cursor: z.lazy(() => TriggersListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace TriggersListResponse$ {
    export const inboundSchema: z.ZodType<TriggersListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => TriggersListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: TriggersListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggersListResponse> = z
        .object({
            result: z.lazy(() => TriggersListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
