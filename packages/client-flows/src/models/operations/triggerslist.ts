/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TriggersListRequest = {
    name?: string | undefined;
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type TriggersListCursor = {
    next?: string | undefined;
    data: Array<Array<components.Trigger>>;
};

/**
 * The request has succeeded.
 */
export type TriggersListResponseBody = {
    cursor: TriggersListCursor;
};

export type TriggersListResponse = {
    result: TriggersListResponseBody;
};

/** @internal */
export const TriggersListRequest$inboundSchema: z.ZodType<
    TriggersListRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string().optional(),
    cursor: z.string().optional(),
    pageSize: z.number().int().optional(),
});

/** @internal */
export type TriggersListRequest$Outbound = {
    name?: string | undefined;
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

/** @internal */
export const TriggersListRequest$outboundSchema: z.ZodType<
    TriggersListRequest$Outbound,
    z.ZodTypeDef,
    TriggersListRequest
> = z.object({
    name: z.string().optional(),
    cursor: z.string().optional(),
    pageSize: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggersListRequest$ {
    /** @deprecated use `TriggersListRequest$inboundSchema` instead. */
    export const inboundSchema = TriggersListRequest$inboundSchema;
    /** @deprecated use `TriggersListRequest$outboundSchema` instead. */
    export const outboundSchema = TriggersListRequest$outboundSchema;
    /** @deprecated use `TriggersListRequest$Outbound` instead. */
    export type Outbound = TriggersListRequest$Outbound;
}

/** @internal */
export const TriggersListCursor$inboundSchema: z.ZodType<
    TriggersListCursor,
    z.ZodTypeDef,
    unknown
> = z.object({
    next: z.string().optional(),
    data: z.array(z.array(components.Trigger$inboundSchema)),
});

/** @internal */
export type TriggersListCursor$Outbound = {
    next?: string | undefined;
    data: Array<Array<components.Trigger$Outbound>>;
};

/** @internal */
export const TriggersListCursor$outboundSchema: z.ZodType<
    TriggersListCursor$Outbound,
    z.ZodTypeDef,
    TriggersListCursor
> = z.object({
    next: z.string().optional(),
    data: z.array(z.array(components.Trigger$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggersListCursor$ {
    /** @deprecated use `TriggersListCursor$inboundSchema` instead. */
    export const inboundSchema = TriggersListCursor$inboundSchema;
    /** @deprecated use `TriggersListCursor$outboundSchema` instead. */
    export const outboundSchema = TriggersListCursor$outboundSchema;
    /** @deprecated use `TriggersListCursor$Outbound` instead. */
    export type Outbound = TriggersListCursor$Outbound;
}

/** @internal */
export const TriggersListResponseBody$inboundSchema: z.ZodType<
    TriggersListResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.lazy(() => TriggersListCursor$inboundSchema),
});

/** @internal */
export type TriggersListResponseBody$Outbound = {
    cursor: TriggersListCursor$Outbound;
};

/** @internal */
export const TriggersListResponseBody$outboundSchema: z.ZodType<
    TriggersListResponseBody$Outbound,
    z.ZodTypeDef,
    TriggersListResponseBody
> = z.object({
    cursor: z.lazy(() => TriggersListCursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggersListResponseBody$ {
    /** @deprecated use `TriggersListResponseBody$inboundSchema` instead. */
    export const inboundSchema = TriggersListResponseBody$inboundSchema;
    /** @deprecated use `TriggersListResponseBody$outboundSchema` instead. */
    export const outboundSchema = TriggersListResponseBody$outboundSchema;
    /** @deprecated use `TriggersListResponseBody$Outbound` instead. */
    export type Outbound = TriggersListResponseBody$Outbound;
}

/** @internal */
export const TriggersListResponse$inboundSchema: z.ZodType<
    TriggersListResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => TriggersListResponseBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type TriggersListResponse$Outbound = {
    Result: TriggersListResponseBody$Outbound;
};

/** @internal */
export const TriggersListResponse$outboundSchema: z.ZodType<
    TriggersListResponse$Outbound,
    z.ZodTypeDef,
    TriggersListResponse
> = z
    .object({
        result: z.lazy(() => TriggersListResponseBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggersListResponse$ {
    /** @deprecated use `TriggersListResponse$inboundSchema` instead. */
    export const inboundSchema = TriggersListResponse$inboundSchema;
    /** @deprecated use `TriggersListResponse$outboundSchema` instead. */
    export const outboundSchema = TriggersListResponse$outboundSchema;
    /** @deprecated use `TriggersListResponse$Outbound` instead. */
    export type Outbound = TriggersListResponse$Outbound;
}
