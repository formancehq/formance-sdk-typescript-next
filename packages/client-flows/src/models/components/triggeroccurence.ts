/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import {
    WorkflowInstance,
    WorkflowInstance$inboundSchema,
    WorkflowInstance$Outbound,
    WorkflowInstance$outboundSchema,
} from "./workflowinstance.js";
import * as z from "zod";

export type TriggerOccurence = {
    date: Date;
    workflowInstanceId?: string | undefined;
    workflowInstance?: WorkflowInstance | undefined;
    triggerID: string;
    error?: string | undefined;
    event?: any | undefined;
};

/** @internal */
export const TriggerOccurence$inboundSchema: z.ZodType<TriggerOccurence, z.ZodTypeDef, unknown> =
    z.object({
        date: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        workflowInstanceId: z.string().optional(),
        workflowInstance: WorkflowInstance$inboundSchema.optional(),
        triggerID: z.string(),
        error: z.string().optional(),
        event: z.any().optional(),
    });

/** @internal */
export type TriggerOccurence$Outbound = {
    date: string;
    workflowInstanceId?: string | undefined;
    workflowInstance?: WorkflowInstance$Outbound | undefined;
    triggerID: string;
    error?: string | undefined;
    event?: any | undefined;
};

/** @internal */
export const TriggerOccurence$outboundSchema: z.ZodType<
    TriggerOccurence$Outbound,
    z.ZodTypeDef,
    TriggerOccurence
> = z.object({
    date: z.date().transform((v) => v.toISOString()),
    workflowInstanceId: z.string().optional(),
    workflowInstance: WorkflowInstance$outboundSchema.optional(),
    triggerID: z.string(),
    error: z.string().optional(),
    event: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggerOccurence$ {
    /** @deprecated use `TriggerOccurence$inboundSchema` instead. */
    export const inboundSchema = TriggerOccurence$inboundSchema;
    /** @deprecated use `TriggerOccurence$outboundSchema` instead. */
    export const outboundSchema = TriggerOccurence$outboundSchema;
    /** @deprecated use `TriggerOccurence$Outbound` instead. */
    export type Outbound = TriggerOccurence$Outbound;
}
