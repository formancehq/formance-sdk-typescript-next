/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WalletCounterpart, WalletCounterpart$ } from "./walletcounterpart.js";
import * as z from "zod";

export type WalletsDebitWalletInputAmount = {
    asset: string;
    amount: number;
};

export type WalletsDebitWalletInput = {
    pending?: boolean | undefined;
    amount: WalletsDebitWalletInputAmount;
    metadata: { [k: string]: string };
    description?: string | undefined;
    destination?: WalletCounterpart | undefined;
    balances?: Array<string> | undefined;
    timestamp?: Date | undefined;
};

/** @internal */
export namespace WalletsDebitWalletInputAmount$ {
    export const inboundSchema: z.ZodType<WalletsDebitWalletInputAmount, z.ZodTypeDef, unknown> =
        z.object({
            asset: z.string(),
            amount: z.number().int(),
        });

    export type Outbound = {
        asset: string;
        amount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsDebitWalletInputAmount> =
        z.object({
            asset: z.string(),
            amount: z.number().int(),
        });
}

/** @internal */
export namespace WalletsDebitWalletInput$ {
    export const inboundSchema: z.ZodType<WalletsDebitWalletInput, z.ZodTypeDef, unknown> =
        z.object({
            pending: z.boolean().optional(),
            amount: z.lazy(() => WalletsDebitWalletInputAmount$.inboundSchema),
            metadata: z.record(z.string()),
            description: z.string().optional(),
            destination: WalletCounterpart$.inboundSchema.optional(),
            balances: z.array(z.string()).optional(),
            timestamp: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        });

    export type Outbound = {
        pending?: boolean | undefined;
        amount: WalletsDebitWalletInputAmount$.Outbound;
        metadata: { [k: string]: string };
        description?: string | undefined;
        destination?: WalletCounterpart$.Outbound | undefined;
        balances?: Array<string> | undefined;
        timestamp?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsDebitWalletInput> =
        z.object({
            pending: z.boolean().optional(),
            amount: z.lazy(() => WalletsDebitWalletInputAmount$.outboundSchema),
            metadata: z.record(z.string()),
            description: z.string().optional(),
            destination: WalletCounterpart$.outboundSchema.optional(),
            balances: z.array(z.string()).optional(),
            timestamp: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        });
}
