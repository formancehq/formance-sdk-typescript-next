/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const WalletsWalletCounterpartWalletType = {
    Wallet: "WALLET",
} as const;
export type WalletsWalletCounterpartWalletType = ClosedEnum<
    typeof WalletsWalletCounterpartWalletType
>;

export type WalletsWalletCounterpartWallet = {
    type: WalletsWalletCounterpartWalletType;
    identifier: string;
    balance?: string | undefined;
};

/** @internal */
export namespace WalletsWalletCounterpartWalletType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof WalletsWalletCounterpartWalletType> =
        z.nativeEnum(WalletsWalletCounterpartWalletType);
    export const outboundSchema: z.ZodNativeEnum<typeof WalletsWalletCounterpartWalletType> =
        inboundSchema;
}

/** @internal */
export namespace WalletsWalletCounterpartWallet$ {
    export const inboundSchema: z.ZodType<WalletsWalletCounterpartWallet, z.ZodTypeDef, unknown> =
        z.object({
            type: WalletsWalletCounterpartWalletType$.inboundSchema,
            identifier: z.string(),
            balance: z.string().optional(),
        });

    export type Outbound = {
        type: string;
        identifier: string;
        balance?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsWalletCounterpartWallet> =
        z.object({
            type: WalletsWalletCounterpartWalletType$.outboundSchema,
            identifier: z.string(),
            balance: z.string().optional(),
        });
}
