/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import {
    LedgerPosting,
    LedgerPosting$inboundSchema,
    LedgerPosting$Outbound,
    LedgerPosting$outboundSchema,
} from "./ledgerposting.js";
import * as z from "zod";

export type LedgerTransaction = {
    timestamp: Date;
    postings: Array<LedgerPosting>;
    reference?: string | undefined;
    metadata: { [k: string]: string };
    id: string;
    reverted: boolean;
};

/** @internal */
export const LedgerTransaction$inboundSchema: z.ZodType<LedgerTransaction, z.ZodTypeDef, unknown> =
    z.object({
        timestamp: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        postings: z.array(LedgerPosting$inboundSchema),
        reference: z.string().optional(),
        metadata: z.record(z.string()),
        id: z.string(),
        reverted: z.boolean(),
    });

/** @internal */
export type LedgerTransaction$Outbound = {
    timestamp: string;
    postings: Array<LedgerPosting$Outbound>;
    reference?: string | undefined;
    metadata: { [k: string]: string };
    id: string;
    reverted: boolean;
};

/** @internal */
export const LedgerTransaction$outboundSchema: z.ZodType<
    LedgerTransaction$Outbound,
    z.ZodTypeDef,
    LedgerTransaction
> = z.object({
    timestamp: z.date().transform((v) => v.toISOString()),
    postings: z.array(LedgerPosting$outboundSchema),
    reference: z.string().optional(),
    metadata: z.record(z.string()),
    id: z.string(),
    reverted: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LedgerTransaction$ {
    /** @deprecated use `LedgerTransaction$inboundSchema` instead. */
    export const inboundSchema = LedgerTransaction$inboundSchema;
    /** @deprecated use `LedgerTransaction$outboundSchema` instead. */
    export const outboundSchema = LedgerTransaction$outboundSchema;
    /** @deprecated use `LedgerTransaction$Outbound` instead. */
    export type Outbound = LedgerTransaction$Outbound;
}
