/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WorkflowStatus = {
    stage: number;
    instanceId: string;
    startedAt: Date;
    terminatedAt?: Date | undefined;
    error?: string | undefined;
};

/** @internal */
export const WorkflowStatus$inboundSchema: z.ZodType<WorkflowStatus, z.ZodTypeDef, unknown> =
    z.object({
        stage: z.number().int(),
        instanceId: z.string(),
        startedAt: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        terminatedAt: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        error: z.string().optional(),
    });

/** @internal */
export type WorkflowStatus$Outbound = {
    stage: number;
    instanceId: string;
    startedAt: string;
    terminatedAt?: string | undefined;
    error?: string | undefined;
};

/** @internal */
export const WorkflowStatus$outboundSchema: z.ZodType<
    WorkflowStatus$Outbound,
    z.ZodTypeDef,
    WorkflowStatus
> = z.object({
    stage: z.number().int(),
    instanceId: z.string(),
    startedAt: z.date().transform((v) => v.toISOString()),
    terminatedAt: z
        .date()
        .transform((v) => v.toISOString())
        .optional(),
    error: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowStatus$ {
    /** @deprecated use `WorkflowStatus$inboundSchema` instead. */
    export const inboundSchema = WorkflowStatus$inboundSchema;
    /** @deprecated use `WorkflowStatus$outboundSchema` instead. */
    export const outboundSchema = WorkflowStatus$outboundSchema;
    /** @deprecated use `WorkflowStatus$Outbound` instead. */
    export type Outbound = WorkflowStatus$Outbound;
}
