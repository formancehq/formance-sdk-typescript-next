/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const PaymentsPaymentStatus = {
    Pending: "PENDING",
    Succeeded: "SUCCEEDED",
    Cancelled: "CANCELLED",
    Failed: "FAILED",
    Expired: "EXPIRED",
    Refunded: "REFUNDED",
    RefundedFailure: "REFUNDED_FAILURE",
    Dispute: "DISPUTE",
    DisputeWon: "DISPUTE_WON",
    DisputeLost: "DISPUTE_LOST",
    Other: "OTHER",
} as const;
export type PaymentsPaymentStatus = ClosedEnum<typeof PaymentsPaymentStatus>;

/** @internal */
export const PaymentsPaymentStatus$inboundSchema: z.ZodNativeEnum<typeof PaymentsPaymentStatus> =
    z.nativeEnum(PaymentsPaymentStatus);

/** @internal */
export const PaymentsPaymentStatus$outboundSchema: z.ZodNativeEnum<typeof PaymentsPaymentStatus> =
    PaymentsPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentsPaymentStatus$ {
    /** @deprecated use `PaymentsPaymentStatus$inboundSchema` instead. */
    export const inboundSchema = PaymentsPaymentStatus$inboundSchema;
    /** @deprecated use `PaymentsPaymentStatus$outboundSchema` instead. */
    export const outboundSchema = PaymentsPaymentStatus$outboundSchema;
}
