/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PoliciesV1CreateRequestBody = {
    name: string;
    ledgerName: string;
    ledgerQuery: { [k: string]: any };
    paymentsPoolID: string;
};

/**
 * The request has succeeded and a new resource has been created as a result.
 */
export type PoliciesV1CreateResponseBody = {
    data: components.Policy;
};

/** @internal */
export namespace PoliciesV1CreateRequestBody$ {
    export const inboundSchema: z.ZodType<PoliciesV1CreateRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            name: z.string(),
            ledgerName: z.string(),
            ledgerQuery: z.record(z.any()),
            paymentsPoolID: z.string(),
        });

    export type Outbound = {
        name: string;
        ledgerName: string;
        ledgerQuery: { [k: string]: any };
        paymentsPoolID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoliciesV1CreateRequestBody> =
        z.object({
            name: z.string(),
            ledgerName: z.string(),
            ledgerQuery: z.record(z.any()),
            paymentsPoolID: z.string(),
        });
}

/** @internal */
export namespace PoliciesV1CreateResponseBody$ {
    export const inboundSchema: z.ZodType<PoliciesV1CreateResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: components.Policy$.inboundSchema,
        });

    export type Outbound = {
        data: components.Policy$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoliciesV1CreateResponseBody> =
        z.object({
            data: components.Policy$.outboundSchema,
        });
}
