/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type PoliciesV1DeleteRequest = {
    policyID: string;
};

/** @internal */
export const PoliciesV1DeleteRequest$inboundSchema: z.ZodType<
    PoliciesV1DeleteRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    policyID: z.string(),
});

/** @internal */
export type PoliciesV1DeleteRequest$Outbound = {
    policyID: string;
};

/** @internal */
export const PoliciesV1DeleteRequest$outboundSchema: z.ZodType<
    PoliciesV1DeleteRequest$Outbound,
    z.ZodTypeDef,
    PoliciesV1DeleteRequest
> = z.object({
    policyID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PoliciesV1DeleteRequest$ {
    /** @deprecated use `PoliciesV1DeleteRequest$inboundSchema` instead. */
    export const inboundSchema = PoliciesV1DeleteRequest$inboundSchema;
    /** @deprecated use `PoliciesV1DeleteRequest$outboundSchema` instead. */
    export const outboundSchema = PoliciesV1DeleteRequest$outboundSchema;
    /** @deprecated use `PoliciesV1DeleteRequest$Outbound` instead. */
    export type Outbound = PoliciesV1DeleteRequest$Outbound;
}
