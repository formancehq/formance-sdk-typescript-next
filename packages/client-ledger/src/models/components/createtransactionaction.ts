/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    CreateTransactionWithNumscript,
    CreateTransactionWithNumscript$,
} from "./createtransactionwithnumscript.js";
import {
    CreateTransactionWithPostings,
    CreateTransactionWithPostings$,
} from "./createtransactionwithpostings.js";
import * as z from "zod";

export const Action = {
    CreateTransaction: "CREATE_TRANSACTION",
} as const;
export type Action = ClosedEnum<typeof Action>;

export type Data = CreateTransactionWithPostings | CreateTransactionWithNumscript;

export type CreateTransactionAction = {
    action: Action;
    ik?: string | undefined;
    data: CreateTransactionWithPostings | CreateTransactionWithNumscript;
};

/** @internal */
export namespace Action$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Action> = z.nativeEnum(Action);
    export const outboundSchema: z.ZodNativeEnum<typeof Action> = inboundSchema;
}

/** @internal */
export namespace Data$ {
    export const inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z.union([
        CreateTransactionWithPostings$.inboundSchema,
        CreateTransactionWithNumscript$.inboundSchema,
    ]);

    export type Outbound =
        | CreateTransactionWithPostings$.Outbound
        | CreateTransactionWithNumscript$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Data> = z.union([
        CreateTransactionWithPostings$.outboundSchema,
        CreateTransactionWithNumscript$.outboundSchema,
    ]);
}

/** @internal */
export namespace CreateTransactionAction$ {
    export const inboundSchema: z.ZodType<CreateTransactionAction, z.ZodTypeDef, unknown> =
        z.object({
            action: Action$.inboundSchema,
            ik: z.string().optional(),
            data: z.union([
                CreateTransactionWithPostings$.inboundSchema,
                CreateTransactionWithNumscript$.inboundSchema,
            ]),
        });

    export type Outbound = {
        action: string;
        ik?: string | undefined;
        data: CreateTransactionWithPostings$.Outbound | CreateTransactionWithNumscript$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTransactionAction> =
        z.object({
            action: Action$.outboundSchema,
            ik: z.string().optional(),
            data: z.union([
                CreateTransactionWithPostings$.outboundSchema,
                CreateTransactionWithNumscript$.outboundSchema,
            ]),
        });
}
