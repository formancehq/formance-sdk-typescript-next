/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { MigrationState, MigrationState$ } from "./migrationstate";
import * as z from "zod";

export type Migration = {
    version: number;
    name: string;
    date: Date;
    state: MigrationState;
};

/** @internal */
export namespace Migration$ {
    export const inboundSchema: z.ZodType<Migration, z.ZodTypeDef, unknown> = z.object({
        version: z.number().int(),
        name: z.string(),
        date: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        state: MigrationState$.inboundSchema,
    });

    export type Outbound = {
        version: number;
        name: string;
        date: string;
        state: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Migration> = z.object({
        version: z.number().int(),
        name: z.string(),
        date: z.date().transform((v) => v.toISOString()),
        state: MigrationState$.outboundSchema,
    });
}
