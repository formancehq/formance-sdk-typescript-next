/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { DeleteMetadataTarget, DeleteMetadataTarget$ } from "./deletemetadatatarget.js";
import * as z from "zod";

export const DeleteMetadataActionAction = {
    DeleteMetadata: "DELETE_METADATA",
} as const;
export type DeleteMetadataActionAction = ClosedEnum<typeof DeleteMetadataActionAction>;

export type DeleteMetadataAction = {
    action: DeleteMetadataActionAction;
    ik?: string | undefined;
    data: DeleteMetadataTarget;
};

/** @internal */
export namespace DeleteMetadataActionAction$ {
    export const inboundSchema: z.ZodNativeEnum<typeof DeleteMetadataActionAction> = z.nativeEnum(
        DeleteMetadataActionAction
    );
    export const outboundSchema: z.ZodNativeEnum<typeof DeleteMetadataActionAction> = inboundSchema;
}

/** @internal */
export namespace DeleteMetadataAction$ {
    export const inboundSchema: z.ZodType<DeleteMetadataAction, z.ZodTypeDef, unknown> = z.object({
        action: DeleteMetadataActionAction$.inboundSchema,
        ik: z.string().optional(),
        data: DeleteMetadataTarget$.inboundSchema,
    });

    export type Outbound = {
        action: string;
        ik?: string | undefined;
        data: DeleteMetadataTarget$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteMetadataAction> = z.object(
        {
            action: DeleteMetadataActionAction$.outboundSchema,
            ik: z.string().optional(),
            data: DeleteMetadataTarget$.outboundSchema,
        }
    );
}
