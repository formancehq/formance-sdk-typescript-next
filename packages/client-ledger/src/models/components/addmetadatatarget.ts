/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AddMetadataTargetAccount, AddMetadataTargetAccount$ } from "./addmetadatatargetaccount.js";
import {
    AddMetadataTargetTransaction,
    AddMetadataTargetTransaction$,
} from "./addmetadatatargettransaction.js";
import * as z from "zod";

export type AddMetadataTarget =
    | (AddMetadataTargetAccount & { targetType: "ACCOUNT" })
    | (AddMetadataTargetTransaction & { targetType: "TRANSACTION" });

/** @internal */
export namespace AddMetadataTarget$ {
    export const inboundSchema: z.ZodType<AddMetadataTarget, z.ZodTypeDef, unknown> = z.union([
        AddMetadataTargetAccount$.inboundSchema.and(
            z
                .object({ targetType: z.literal("ACCOUNT") })
                .transform((v) => ({ targetType: v.targetType }))
        ),
        AddMetadataTargetTransaction$.inboundSchema.and(
            z
                .object({ targetType: z.literal("TRANSACTION") })
                .transform((v) => ({ targetType: v.targetType }))
        ),
    ]);

    export type Outbound =
        | (AddMetadataTargetAccount$.Outbound & { targetType: "ACCOUNT" })
        | (AddMetadataTargetTransaction$.Outbound & { targetType: "TRANSACTION" });
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddMetadataTarget> = z.union([
        AddMetadataTargetAccount$.outboundSchema.and(
            z
                .object({ targetType: z.literal("ACCOUNT") })
                .transform((v) => ({ targetType: v.targetType }))
        ),
        AddMetadataTargetTransaction$.outboundSchema.and(
            z
                .object({ targetType: z.literal("TRANSACTION") })
                .transform((v) => ({ targetType: v.targetType }))
        ),
    ]);
}
