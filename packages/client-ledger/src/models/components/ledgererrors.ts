/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const LedgerErrors = {
    Internal: "INTERNAL",
    InsufficientFund: "INSUFFICIENT_FUND",
    Validation: "VALIDATION",
    Conflict: "CONFLICT",
    CompilationFailed: "COMPILATION_FAILED",
    MetadataOverride: "METADATA_OVERRIDE",
    NotFound: "NOT_FOUND",
    RevertOccurring: "REVERT_OCCURRING",
    AlreadyRevert: "ALREADY_REVERT",
    NoPostings: "NO_POSTINGS",
    LedgerNotFound: "LEDGER_NOT_FOUND",
} as const;
export type LedgerErrors = ClosedEnum<typeof LedgerErrors>;

/** @internal */
export const LedgerErrors$inboundSchema: z.ZodNativeEnum<typeof LedgerErrors> =
    z.nativeEnum(LedgerErrors);

/** @internal */
export const LedgerErrors$outboundSchema: z.ZodNativeEnum<typeof LedgerErrors> =
    LedgerErrors$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LedgerErrors$ {
    /** @deprecated use `LedgerErrors$inboundSchema` instead. */
    export const inboundSchema = LedgerErrors$inboundSchema;
    /** @deprecated use `LedgerErrors$outboundSchema` instead. */
    export const outboundSchema = LedgerErrors$outboundSchema;
}
