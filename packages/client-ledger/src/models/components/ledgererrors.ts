/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const LedgerErrors = {
    Internal: "INTERNAL",
    InsufficientFund: "INSUFFICIENT_FUND",
    Validation: "VALIDATION",
    Conflict: "CONFLICT",
    CompilationFailed: "COMPILATION_FAILED",
    MetadataOverride: "METADATA_OVERRIDE",
    NotFound: "NOT_FOUND",
    RevertOccurring: "REVERT_OCCURRING",
    AlreadyRevert: "ALREADY_REVERT",
    NoPostings: "NO_POSTINGS",
    LedgerNotFound: "LEDGER_NOT_FOUND",
} as const;
export type LedgerErrors = ClosedEnum<typeof LedgerErrors>;

/** @internal */
export namespace LedgerErrors$ {
    export const inboundSchema: z.ZodNativeEnum<typeof LedgerErrors> = z.nativeEnum(LedgerErrors);
    export const outboundSchema: z.ZodNativeEnum<typeof LedgerErrors> = inboundSchema;
}
