/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { AddMetadataTarget, AddMetadataTarget$ } from "./addmetadatatarget.js";
import * as z from "zod";

export const AddMetadataActionAction = {
    AddMetadata: "ADD_METADATA",
} as const;
export type AddMetadataActionAction = ClosedEnum<typeof AddMetadataActionAction>;

export type AddMetadataAction = {
    action: AddMetadataActionAction;
    ik?: string | undefined;
    data: AddMetadataTarget;
};

/** @internal */
export namespace AddMetadataActionAction$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AddMetadataActionAction> =
        z.nativeEnum(AddMetadataActionAction);
    export const outboundSchema: z.ZodNativeEnum<typeof AddMetadataActionAction> = inboundSchema;
}

/** @internal */
export namespace AddMetadataAction$ {
    export const inboundSchema: z.ZodType<AddMetadataAction, z.ZodTypeDef, unknown> = z.object({
        action: AddMetadataActionAction$.inboundSchema,
        ik: z.string().optional(),
        data: AddMetadataTarget$.inboundSchema,
    });

    export type Outbound = {
        action: string;
        ik?: string | undefined;
        data: AddMetadataTarget$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddMetadataAction> = z.object({
        action: AddMetadataActionAction$.outboundSchema,
        ik: z.string().optional(),
        data: AddMetadataTarget$.outboundSchema,
    });
}
