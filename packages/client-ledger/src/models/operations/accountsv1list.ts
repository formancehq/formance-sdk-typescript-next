/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type AccountsV1ListRequest = {
    ledger: string;
    cursor?: string | undefined;
};

export type AccountsV1ListCursor = {
    next?: string | undefined;
    data: Array<components.Account>;
};

/**
 * The request has succeeded.
 */
export type AccountsV1ListResponseBody = {
    cursor: AccountsV1ListCursor;
};

export type AccountsV1ListResponse = {
    result: AccountsV1ListResponseBody;
};

/** @internal */
export namespace AccountsV1ListRequest$ {
    export const inboundSchema: z.ZodType<AccountsV1ListRequest, z.ZodTypeDef, unknown> = z.object({
        ledger: z.string(),
        cursor: z.string().optional(),
    });

    export type Outbound = {
        ledger: string;
        cursor?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsV1ListRequest> =
        z.object({
            ledger: z.string(),
            cursor: z.string().optional(),
        });
}

/** @internal */
export namespace AccountsV1ListCursor$ {
    export const inboundSchema: z.ZodType<AccountsV1ListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(components.Account$.inboundSchema),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.Account$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsV1ListCursor> = z.object(
        {
            next: z.string().optional(),
            data: z.array(components.Account$.outboundSchema),
        }
    );
}

/** @internal */
export namespace AccountsV1ListResponseBody$ {
    export const inboundSchema: z.ZodType<AccountsV1ListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => AccountsV1ListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: AccountsV1ListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsV1ListResponseBody> =
        z.object({
            cursor: z.lazy(() => AccountsV1ListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace AccountsV1ListResponse$ {
    export const inboundSchema: z.ZodType<AccountsV1ListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => AccountsV1ListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: AccountsV1ListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsV1ListResponse> = z
        .object({
            result: z.lazy(() => AccountsV1ListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
