/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type TransactionsGetRequest = {
    ledger: string;
    id: number;
    expand?: string | undefined;
    pit?: Date | undefined;
};

/**
 * The request has succeeded.
 */
export type TransactionsGetResponseBody = {
    data: components.ExpendedTransaction;
};

/** @internal */
export namespace TransactionsGetRequest$ {
    export const inboundSchema: z.ZodType<TransactionsGetRequest, z.ZodTypeDef, unknown> = z.object(
        {
            ledger: z.string(),
            id: z.number().int(),
            expand: z.string().optional(),
            pit: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        }
    );

    export type Outbound = {
        ledger: string;
        id: number;
        expand?: string | undefined;
        pit?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransactionsGetRequest> =
        z.object({
            ledger: z.string(),
            id: z.number().int(),
            expand: z.string().optional(),
            pit: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        });
}

/** @internal */
export namespace TransactionsGetResponseBody$ {
    export const inboundSchema: z.ZodType<TransactionsGetResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: components.ExpendedTransaction$.inboundSchema,
        });

    export type Outbound = {
        data: components.ExpendedTransaction$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransactionsGetResponseBody> =
        z.object({
            data: components.ExpendedTransaction$.outboundSchema,
        });
}
