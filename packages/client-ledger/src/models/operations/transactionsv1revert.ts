/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type TransactionsV1RevertRequest = {
    ledger: string;
    txid: number;
    disableChecks?: boolean | undefined;
};

/**
 * The request has succeeded and a new resource has been created as a result.
 */
export type TransactionsV1RevertResponseBody = {
    data: components.Transaction;
};

/** @internal */
export namespace TransactionsV1RevertRequest$ {
    export const inboundSchema: z.ZodType<TransactionsV1RevertRequest, z.ZodTypeDef, unknown> =
        z.object({
            ledger: z.string(),
            txid: z.number().int(),
            disableChecks: z.boolean().optional(),
        });

    export type Outbound = {
        ledger: string;
        txid: number;
        disableChecks?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransactionsV1RevertRequest> =
        z.object({
            ledger: z.string(),
            txid: z.number().int(),
            disableChecks: z.boolean().optional(),
        });
}

/** @internal */
export namespace TransactionsV1RevertResponseBody$ {
    export const inboundSchema: z.ZodType<TransactionsV1RevertResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            data: components.Transaction$.inboundSchema,
        });

    export type Outbound = {
        data: components.Transaction$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TransactionsV1RevertResponseBody
    > = z.object({
        data: components.Transaction$.outboundSchema,
    });
}
