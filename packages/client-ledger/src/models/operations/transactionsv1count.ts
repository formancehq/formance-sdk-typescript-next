/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type TransactionsV1CountRequest = {
    ledger: string;
    reference?: string | undefined;
    account?: string | undefined;
    source?: string | undefined;
    destination?: string | undefined;
    startTime?: string | undefined;
    endTime?: string | undefined;
    metadata?: { [k: string]: any } | undefined;
};

/** @internal */
export namespace TransactionsV1CountRequest$ {
    export const inboundSchema: z.ZodType<TransactionsV1CountRequest, z.ZodTypeDef, unknown> = z
        .object({
            ledger: z.string(),
            reference: z.string().optional(),
            account: z.string().optional(),
            source: z.string().optional(),
            destination: z.string().optional(),
            startTime: z.string().optional(),
            endTime: z.string().optional(),
            metadata: z.record(z.any()).optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                ...(v.reference === undefined ? null : { reference: v.reference }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.source === undefined ? null : { source: v.source }),
                ...(v.destination === undefined ? null : { destination: v.destination }),
                ...(v.startTime === undefined ? null : { startTime: v.startTime }),
                ...(v.endTime === undefined ? null : { endTime: v.endTime }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        ledger: string;
        reference?: string | undefined;
        account?: string | undefined;
        source?: string | undefined;
        destination?: string | undefined;
        startTime?: string | undefined;
        endTime?: string | undefined;
        metadata?: { [k: string]: any } | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TransactionsV1CountRequest> = z
        .object({
            ledger: z.string(),
            reference: z.string().optional(),
            account: z.string().optional(),
            source: z.string().optional(),
            destination: z.string().optional(),
            startTime: z.string().optional(),
            endTime: z.string().optional(),
            metadata: z.record(z.any()).optional(),
        })
        .transform((v) => {
            return {
                ledger: v.ledger,
                ...(v.reference === undefined ? null : { reference: v.reference }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.source === undefined ? null : { source: v.source }),
                ...(v.destination === undefined ? null : { destination: v.destination }),
                ...(v.startTime === undefined ? null : { startTime: v.startTime }),
                ...(v.endTime === undefined ? null : { endTime: v.endTime }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}
