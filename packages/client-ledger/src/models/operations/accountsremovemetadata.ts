/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AccountsRemoveMetadataRequest = {
    ledger: string;
    address: string;
    key: string;
};

/** @internal */
export const AccountsRemoveMetadataRequest$inboundSchema: z.ZodType<
    AccountsRemoveMetadataRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    ledger: z.string(),
    address: z.string(),
    key: z.string(),
});

/** @internal */
export type AccountsRemoveMetadataRequest$Outbound = {
    ledger: string;
    address: string;
    key: string;
};

/** @internal */
export const AccountsRemoveMetadataRequest$outboundSchema: z.ZodType<
    AccountsRemoveMetadataRequest$Outbound,
    z.ZodTypeDef,
    AccountsRemoveMetadataRequest
> = z.object({
    ledger: z.string(),
    address: z.string(),
    key: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsRemoveMetadataRequest$ {
    /** @deprecated use `AccountsRemoveMetadataRequest$inboundSchema` instead. */
    export const inboundSchema = AccountsRemoveMetadataRequest$inboundSchema;
    /** @deprecated use `AccountsRemoveMetadataRequest$outboundSchema` instead. */
    export const outboundSchema = AccountsRemoveMetadataRequest$outboundSchema;
    /** @deprecated use `AccountsRemoveMetadataRequest$Outbound` instead. */
    export type Outbound = AccountsRemoveMetadataRequest$Outbound;
}
