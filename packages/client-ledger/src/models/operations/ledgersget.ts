/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type LedgersGetRequest = {
    ledger: string;
};

/**
 * The request has succeeded.
 */
export type LedgersGetResponseBody = {
    data: components.Ledger;
};

/** @internal */
export namespace LedgersGetRequest$ {
    export const inboundSchema: z.ZodType<LedgersGetRequest, z.ZodTypeDef, unknown> = z.object({
        ledger: z.string(),
    });

    export type Outbound = {
        ledger: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LedgersGetRequest> = z.object({
        ledger: z.string(),
    });
}

/** @internal */
export namespace LedgersGetResponseBody$ {
    export const inboundSchema: z.ZodType<LedgersGetResponseBody, z.ZodTypeDef, unknown> = z.object(
        {
            data: components.Ledger$.inboundSchema,
        }
    );

    export type Outbound = {
        data: components.Ledger$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LedgersGetResponseBody> =
        z.object({
            data: components.Ledger$.outboundSchema,
        });
}
