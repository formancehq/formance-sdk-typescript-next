/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { logsExport } from "../funcs/logsExport.js";
import { logsIngest } from "../funcs/logsIngest.js";
import { logsList } from "../funcs/logsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Logs extends ClientSDK {
    async list(
        ledger: string,
        cursor?: string | undefined,
        pageSize?: number | undefined,
        options?: RequestOptions
    ): Promise<PageIterator<operations.LogsListResponse>> {
        return unwrapResultIterator(logsList(this, ledger, cursor, pageSize, options));
    }

    async export(ledger: string, options?: RequestOptions): Promise<string> {
        return unwrapAsync(logsExport(this, ledger, options));
    }

    async ingest(ledger: string, requestBody: string, options?: RequestOptions): Promise<void> {
        return unwrapAsync(logsIngest(this, ledger, requestBody, options));
    }
}
