/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { info } from "../funcs/info.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Accounts } from "./accounts.js";
import { BankAccounts } from "./bankaccounts.js";
import { CashPools } from "./cashpools.js";
import { Connectors } from "./connectors.js";
import { PaymentsV1 } from "./paymentsv1.js";
import { TransferInitiations } from "./transferinitiations.js";

export class ConnectivityClient extends ClientSDK {
    private _accounts?: Accounts;
    get accounts(): Accounts {
        return (this._accounts ??= new Accounts(this.options$));
    }

    private _bankAccounts?: BankAccounts;
    get bankAccounts(): BankAccounts {
        return (this._bankAccounts ??= new BankAccounts(this.options$));
    }

    private _connectors?: Connectors;
    get connectors(): Connectors {
        return (this._connectors ??= new Connectors(this.options$));
    }

    private _paymentsV1?: PaymentsV1;
    get paymentsV1(): PaymentsV1 {
        return (this._paymentsV1 ??= new PaymentsV1(this.options$));
    }

    private _cashPools?: CashPools;
    get cashPools(): CashPools {
        return (this._cashPools ??= new CashPools(this.options$));
    }

    private _transferInitiations?: TransferInitiations;
    get transferInitiations(): TransferInitiations {
        return (this._transferInitiations ??= new TransferInitiations(this.options$));
    }

    async info(options?: RequestOptions): Promise<components.ServerInfo> {
        return unwrapAsync(info(this, options));
    }
}
