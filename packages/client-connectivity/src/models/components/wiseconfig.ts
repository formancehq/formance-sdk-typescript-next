/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type WiseConfig = {
    name: string;
    /**
     * The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
     */
    pollingPeriod?: string | undefined;
    apiKey: string;
};

/** @internal */
export const WiseConfig$inboundSchema: z.ZodType<WiseConfig, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    pollingPeriod: z.string().default("120s"),
    apiKey: z.string(),
});

/** @internal */
export type WiseConfig$Outbound = {
    name: string;
    pollingPeriod: string;
    apiKey: string;
};

/** @internal */
export const WiseConfig$outboundSchema: z.ZodType<WiseConfig$Outbound, z.ZodTypeDef, WiseConfig> =
    z.object({
        name: z.string(),
        pollingPeriod: z.string().default("120s"),
        apiKey: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WiseConfig$ {
    /** @deprecated use `WiseConfig$inboundSchema` instead. */
    export const inboundSchema = WiseConfig$inboundSchema;
    /** @deprecated use `WiseConfig$outboundSchema` instead. */
    export const outboundSchema = WiseConfig$outboundSchema;
    /** @deprecated use `WiseConfig$Outbound` instead. */
    export type Outbound = WiseConfig$Outbound;
}
