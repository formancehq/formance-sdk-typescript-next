/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    TransferInitiationStatus,
    TransferInitiationStatus$inboundSchema,
    TransferInitiationStatus$outboundSchema,
} from "./transferinitiationstatus.js";
import * as z from "zod";

export type TransferInitiationPayment = {
    paymentID: string;
    createdAt: Date;
    status: TransferInitiationStatus;
    error: string;
};

/** @internal */
export const TransferInitiationPayment$inboundSchema: z.ZodType<
    TransferInitiationPayment,
    z.ZodTypeDef,
    unknown
> = z.object({
    paymentID: z.string(),
    createdAt: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    status: TransferInitiationStatus$inboundSchema,
    error: z.string(),
});

/** @internal */
export type TransferInitiationPayment$Outbound = {
    paymentID: string;
    createdAt: string;
    status: string;
    error: string;
};

/** @internal */
export const TransferInitiationPayment$outboundSchema: z.ZodType<
    TransferInitiationPayment$Outbound,
    z.ZodTypeDef,
    TransferInitiationPayment
> = z.object({
    paymentID: z.string(),
    createdAt: z.date().transform((v) => v.toISOString()),
    status: TransferInitiationStatus$outboundSchema,
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransferInitiationPayment$ {
    /** @deprecated use `TransferInitiationPayment$inboundSchema` instead. */
    export const inboundSchema = TransferInitiationPayment$inboundSchema;
    /** @deprecated use `TransferInitiationPayment$outboundSchema` instead. */
    export const outboundSchema = TransferInitiationPayment$outboundSchema;
    /** @deprecated use `TransferInitiationPayment$Outbound` instead. */
    export type Outbound = TransferInitiationPayment$Outbound;
}
