/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CashPoolsAddAccountRequestBody = {
    accountID: string;
};

export type CashPoolsAddAccountRequest = {
    poolId: string;
    requestBody: CashPoolsAddAccountRequestBody;
};

/** @internal */
export namespace CashPoolsAddAccountRequestBody$ {
    export const inboundSchema: z.ZodType<CashPoolsAddAccountRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            accountID: z.string(),
        });

    export type Outbound = {
        accountID: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsAddAccountRequestBody> =
        z.object({
            accountID: z.string(),
        });
}

/** @internal */
export namespace CashPoolsAddAccountRequest$ {
    export const inboundSchema: z.ZodType<CashPoolsAddAccountRequest, z.ZodTypeDef, unknown> = z
        .object({
            poolId: z.string(),
            RequestBody: z.lazy(() => CashPoolsAddAccountRequestBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        poolId: string;
        RequestBody: CashPoolsAddAccountRequestBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsAddAccountRequest> = z
        .object({
            poolId: z.string(),
            requestBody: z.lazy(() => CashPoolsAddAccountRequestBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                requestBody: "RequestBody",
            });
        });
}
