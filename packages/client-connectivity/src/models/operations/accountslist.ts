/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AccountsListRequest = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
    sort?: Array<string> | undefined;
    query?: string | undefined;
};

export type Cursor = {
    next?: string | undefined;
    data: Array<components.Account>;
};

/**
 * The request has succeeded.
 */
export type AccountsListResponseBody = {
    cursor: Cursor;
};

export type AccountsListResponse = {
    result: AccountsListResponseBody;
};

/** @internal */
export const AccountsListRequest$inboundSchema: z.ZodType<
    AccountsListRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.string().optional(),
    pageSize: z.number().int().optional(),
    sort: z.array(z.string()).optional(),
    query: z.string().optional(),
});

/** @internal */
export type AccountsListRequest$Outbound = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
    sort?: Array<string> | undefined;
    query?: string | undefined;
};

/** @internal */
export const AccountsListRequest$outboundSchema: z.ZodType<
    AccountsListRequest$Outbound,
    z.ZodTypeDef,
    AccountsListRequest
> = z.object({
    cursor: z.string().optional(),
    pageSize: z.number().int().optional(),
    sort: z.array(z.string()).optional(),
    query: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsListRequest$ {
    /** @deprecated use `AccountsListRequest$inboundSchema` instead. */
    export const inboundSchema = AccountsListRequest$inboundSchema;
    /** @deprecated use `AccountsListRequest$outboundSchema` instead. */
    export const outboundSchema = AccountsListRequest$outboundSchema;
    /** @deprecated use `AccountsListRequest$Outbound` instead. */
    export type Outbound = AccountsListRequest$Outbound;
}

/** @internal */
export const Cursor$inboundSchema: z.ZodType<Cursor, z.ZodTypeDef, unknown> = z.object({
    next: z.string().optional(),
    data: z.array(components.Account$inboundSchema),
});

/** @internal */
export type Cursor$Outbound = {
    next?: string | undefined;
    data: Array<components.Account$Outbound>;
};

/** @internal */
export const Cursor$outboundSchema: z.ZodType<Cursor$Outbound, z.ZodTypeDef, Cursor> = z.object({
    next: z.string().optional(),
    data: z.array(components.Account$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Cursor$ {
    /** @deprecated use `Cursor$inboundSchema` instead. */
    export const inboundSchema = Cursor$inboundSchema;
    /** @deprecated use `Cursor$outboundSchema` instead. */
    export const outboundSchema = Cursor$outboundSchema;
    /** @deprecated use `Cursor$Outbound` instead. */
    export type Outbound = Cursor$Outbound;
}

/** @internal */
export const AccountsListResponseBody$inboundSchema: z.ZodType<
    AccountsListResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.lazy(() => Cursor$inboundSchema),
});

/** @internal */
export type AccountsListResponseBody$Outbound = {
    cursor: Cursor$Outbound;
};

/** @internal */
export const AccountsListResponseBody$outboundSchema: z.ZodType<
    AccountsListResponseBody$Outbound,
    z.ZodTypeDef,
    AccountsListResponseBody
> = z.object({
    cursor: z.lazy(() => Cursor$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsListResponseBody$ {
    /** @deprecated use `AccountsListResponseBody$inboundSchema` instead. */
    export const inboundSchema = AccountsListResponseBody$inboundSchema;
    /** @deprecated use `AccountsListResponseBody$outboundSchema` instead. */
    export const outboundSchema = AccountsListResponseBody$outboundSchema;
    /** @deprecated use `AccountsListResponseBody$Outbound` instead. */
    export type Outbound = AccountsListResponseBody$Outbound;
}

/** @internal */
export const AccountsListResponse$inboundSchema: z.ZodType<
    AccountsListResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => AccountsListResponseBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type AccountsListResponse$Outbound = {
    Result: AccountsListResponseBody$Outbound;
};

/** @internal */
export const AccountsListResponse$outboundSchema: z.ZodType<
    AccountsListResponse$Outbound,
    z.ZodTypeDef,
    AccountsListResponse
> = z
    .object({
        result: z.lazy(() => AccountsListResponseBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsListResponse$ {
    /** @deprecated use `AccountsListResponse$inboundSchema` instead. */
    export const inboundSchema = AccountsListResponse$inboundSchema;
    /** @deprecated use `AccountsListResponse$outboundSchema` instead. */
    export const outboundSchema = AccountsListResponse$outboundSchema;
    /** @deprecated use `AccountsListResponse$Outbound` instead. */
    export type Outbound = AccountsListResponse$Outbound;
}
