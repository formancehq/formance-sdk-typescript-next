/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CashPoolsListRequest = {
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type CashPoolsListCursor = {
    next?: string | undefined;
    data: Array<components.CashPool>;
};

/**
 * The request has succeeded.
 */
export type CashPoolsListResponseBody = {
    cursor: CashPoolsListCursor;
};

export type CashPoolsListResponse = {
    result: CashPoolsListResponseBody;
};

/** @internal */
export namespace CashPoolsListRequest$ {
    export const inboundSchema: z.ZodType<CashPoolsListRequest, z.ZodTypeDef, unknown> = z.object({
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });

    export type Outbound = {
        cursor?: string | undefined;
        pageSize?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsListRequest> = z.object(
        {
            cursor: z.string().optional(),
            pageSize: z.number().int().optional(),
        }
    );
}

/** @internal */
export namespace CashPoolsListCursor$ {
    export const inboundSchema: z.ZodType<CashPoolsListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(components.CashPool$.inboundSchema),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.CashPool$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsListCursor> = z.object({
        next: z.string().optional(),
        data: z.array(components.CashPool$.outboundSchema),
    });
}

/** @internal */
export namespace CashPoolsListResponseBody$ {
    export const inboundSchema: z.ZodType<CashPoolsListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => CashPoolsListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: CashPoolsListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsListResponseBody> =
        z.object({
            cursor: z.lazy(() => CashPoolsListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace CashPoolsListResponse$ {
    export const inboundSchema: z.ZodType<CashPoolsListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => CashPoolsListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: CashPoolsListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CashPoolsListResponse> = z
        .object({
            result: z.lazy(() => CashPoolsListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
