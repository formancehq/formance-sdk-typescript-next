/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type PaymentsV1ListRequest = {
    pageSize?: number | undefined;
    cursor?: string | undefined;
    sort?: Array<string> | undefined;
    query?: string | undefined;
};

export type PaymentsV1ListCursor = {
    next?: string | undefined;
    data: Array<components.Payment>;
};

/**
 * The request has succeeded.
 */
export type PaymentsV1ListResponseBody = {
    cursor: PaymentsV1ListCursor;
};

export type PaymentsV1ListResponse = {
    result: PaymentsV1ListResponseBody;
};

/** @internal */
export namespace PaymentsV1ListRequest$ {
    export const inboundSchema: z.ZodType<PaymentsV1ListRequest, z.ZodTypeDef, unknown> = z.object({
        pageSize: z.number().int().optional(),
        cursor: z.string().optional(),
        sort: z.array(z.string()).optional(),
        query: z.string().optional(),
    });

    export type Outbound = {
        pageSize?: number | undefined;
        cursor?: string | undefined;
        sort?: Array<string> | undefined;
        query?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsV1ListRequest> =
        z.object({
            pageSize: z.number().int().optional(),
            cursor: z.string().optional(),
            sort: z.array(z.string()).optional(),
            query: z.string().optional(),
        });
}

/** @internal */
export namespace PaymentsV1ListCursor$ {
    export const inboundSchema: z.ZodType<PaymentsV1ListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(components.Payment$.inboundSchema),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.Payment$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsV1ListCursor> = z.object(
        {
            next: z.string().optional(),
            data: z.array(components.Payment$.outboundSchema),
        }
    );
}

/** @internal */
export namespace PaymentsV1ListResponseBody$ {
    export const inboundSchema: z.ZodType<PaymentsV1ListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => PaymentsV1ListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: PaymentsV1ListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsV1ListResponseBody> =
        z.object({
            cursor: z.lazy(() => PaymentsV1ListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace PaymentsV1ListResponse$ {
    export const inboundSchema: z.ZodType<PaymentsV1ListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => PaymentsV1ListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: PaymentsV1ListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsV1ListResponse> = z
        .object({
            result: z.lazy(() => PaymentsV1ListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
