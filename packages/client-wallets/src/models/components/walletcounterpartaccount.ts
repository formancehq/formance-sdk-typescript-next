/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const Type = {
    Account: "ACCOUNT",
} as const;
export type Type = ClosedEnum<typeof Type>;

export type WalletCounterpartAccount = {
    type: Type;
    identifier: string;
};

/** @internal */
export namespace Type$ {
    export const inboundSchema = z.nativeEnum(Type);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace WalletCounterpartAccount$ {
    export const inboundSchema: z.ZodType<WalletCounterpartAccount, z.ZodTypeDef, unknown> =
        z.object({
            type: Type$.inboundSchema,
            identifier: z.string(),
        });

    export type Outbound = {
        type: string;
        identifier: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletCounterpartAccount> =
        z.object({
            type: Type$.outboundSchema,
            identifier: z.string(),
        });
}
