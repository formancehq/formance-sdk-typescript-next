/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import {
    WalletCounterpart,
    WalletCounterpart$inboundSchema,
    WalletCounterpart$Outbound,
    WalletCounterpart$outboundSchema,
} from "./walletcounterpart.js";
import * as z from "zod";

export type Hold = {
    id: string;
    walletID: string;
    metadata: { [k: string]: string };
    description: string;
    destination: WalletCounterpart;
};

/** @internal */
export const Hold$inboundSchema: z.ZodType<Hold, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    walletID: z.string(),
    metadata: z.record(z.string()),
    description: z.string(),
    destination: WalletCounterpart$inboundSchema,
});

/** @internal */
export type Hold$Outbound = {
    id: string;
    walletID: string;
    metadata: { [k: string]: string };
    description: string;
    destination: WalletCounterpart$Outbound;
};

/** @internal */
export const Hold$outboundSchema: z.ZodType<Hold$Outbound, z.ZodTypeDef, Hold> = z.object({
    id: z.string(),
    walletID: z.string(),
    metadata: z.record(z.string()),
    description: z.string(),
    destination: WalletCounterpart$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Hold$ {
    /** @deprecated use `Hold$inboundSchema` instead. */
    export const inboundSchema = Hold$inboundSchema;
    /** @deprecated use `Hold$outboundSchema` instead. */
    export const outboundSchema = Hold$outboundSchema;
    /** @deprecated use `Hold$Outbound` instead. */
    export type Outbound = Hold$Outbound;
}
