/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WalletCounterpart, WalletCounterpart$ } from "./walletcounterpart.js";
import * as z from "zod";

export type DebitWalletInputAmount = {
    asset: string;
    amount: number;
};

export type DebitWalletInput = {
    pending?: boolean | undefined;
    amount: DebitWalletInputAmount;
    metadata: { [k: string]: string };
    description?: string | undefined;
    destination?: WalletCounterpart | undefined;
    balances?: Array<string> | undefined;
    timestamp?: Date | undefined;
};

/** @internal */
export namespace DebitWalletInputAmount$ {
    export const inboundSchema: z.ZodType<DebitWalletInputAmount, z.ZodTypeDef, unknown> = z.object(
        {
            asset: z.string(),
            amount: z.number().int(),
        }
    );

    export type Outbound = {
        asset: string;
        amount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DebitWalletInputAmount> =
        z.object({
            asset: z.string(),
            amount: z.number().int(),
        });
}

/** @internal */
export namespace DebitWalletInput$ {
    export const inboundSchema: z.ZodType<DebitWalletInput, z.ZodTypeDef, unknown> = z.object({
        pending: z.boolean().optional(),
        amount: z.lazy(() => DebitWalletInputAmount$.inboundSchema),
        metadata: z.record(z.string()),
        description: z.string().optional(),
        destination: WalletCounterpart$.inboundSchema.optional(),
        balances: z.array(z.string()).optional(),
        timestamp: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
    });

    export type Outbound = {
        pending?: boolean | undefined;
        amount: DebitWalletInputAmount$.Outbound;
        metadata: { [k: string]: string };
        description?: string | undefined;
        destination?: WalletCounterpart$.Outbound | undefined;
        balances?: Array<string> | undefined;
        timestamp?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DebitWalletInput> = z.object({
        pending: z.boolean().optional(),
        amount: z.lazy(() => DebitWalletInputAmount$.outboundSchema),
        metadata: z.record(z.string()),
        description: z.string().optional(),
        destination: WalletCounterpart$.outboundSchema.optional(),
        balances: z.array(z.string()).optional(),
        timestamp: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
    });
}
