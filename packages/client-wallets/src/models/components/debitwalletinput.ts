/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    WalletCounterpart,
    WalletCounterpart$inboundSchema,
    WalletCounterpart$Outbound,
    WalletCounterpart$outboundSchema,
} from "./walletcounterpart.js";
import * as z from "zod";

export type DebitWalletInputAmount = {
    asset: string;
    amount: number;
};

export type DebitWalletInput = {
    pending?: boolean | undefined;
    amount: DebitWalletInputAmount;
    metadata: { [k: string]: string };
    description?: string | undefined;
    destination?: WalletCounterpart | undefined;
    balances?: Array<string> | undefined;
    timestamp?: Date | undefined;
};

/** @internal */
export const DebitWalletInputAmount$inboundSchema: z.ZodType<
    DebitWalletInputAmount,
    z.ZodTypeDef,
    unknown
> = z.object({
    asset: z.string(),
    amount: z.number().int(),
});

/** @internal */
export type DebitWalletInputAmount$Outbound = {
    asset: string;
    amount: number;
};

/** @internal */
export const DebitWalletInputAmount$outboundSchema: z.ZodType<
    DebitWalletInputAmount$Outbound,
    z.ZodTypeDef,
    DebitWalletInputAmount
> = z.object({
    asset: z.string(),
    amount: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DebitWalletInputAmount$ {
    /** @deprecated use `DebitWalletInputAmount$inboundSchema` instead. */
    export const inboundSchema = DebitWalletInputAmount$inboundSchema;
    /** @deprecated use `DebitWalletInputAmount$outboundSchema` instead. */
    export const outboundSchema = DebitWalletInputAmount$outboundSchema;
    /** @deprecated use `DebitWalletInputAmount$Outbound` instead. */
    export type Outbound = DebitWalletInputAmount$Outbound;
}

/** @internal */
export const DebitWalletInput$inboundSchema: z.ZodType<DebitWalletInput, z.ZodTypeDef, unknown> =
    z.object({
        pending: z.boolean().optional(),
        amount: z.lazy(() => DebitWalletInputAmount$inboundSchema),
        metadata: z.record(z.string()),
        description: z.string().optional(),
        destination: WalletCounterpart$inboundSchema.optional(),
        balances: z.array(z.string()).optional(),
        timestamp: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
    });

/** @internal */
export type DebitWalletInput$Outbound = {
    pending?: boolean | undefined;
    amount: DebitWalletInputAmount$Outbound;
    metadata: { [k: string]: string };
    description?: string | undefined;
    destination?: WalletCounterpart$Outbound | undefined;
    balances?: Array<string> | undefined;
    timestamp?: string | undefined;
};

/** @internal */
export const DebitWalletInput$outboundSchema: z.ZodType<
    DebitWalletInput$Outbound,
    z.ZodTypeDef,
    DebitWalletInput
> = z.object({
    pending: z.boolean().optional(),
    amount: z.lazy(() => DebitWalletInputAmount$outboundSchema),
    metadata: z.record(z.string()),
    description: z.string().optional(),
    destination: WalletCounterpart$outboundSchema.optional(),
    balances: z.array(z.string()).optional(),
    timestamp: z
        .date()
        .transform((v) => v.toISOString())
        .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DebitWalletInput$ {
    /** @deprecated use `DebitWalletInput$inboundSchema` instead. */
    export const inboundSchema = DebitWalletInput$inboundSchema;
    /** @deprecated use `DebitWalletInput$outboundSchema` instead. */
    export const outboundSchema = DebitWalletInput$outboundSchema;
    /** @deprecated use `DebitWalletInput$Outbound` instead. */
    export type Outbound = DebitWalletInput$Outbound;
}
