/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import {
    WalletCounterpart,
    WalletCounterpart$inboundSchema,
    WalletCounterpart$Outbound,
    WalletCounterpart$outboundSchema,
} from "./walletcounterpart.js";
import * as z from "zod";

export type Amount = {
    asset: string;
    amount: number;
};

export type CreditWalletInput = {
    amount: Amount;
    metadata: { [k: string]: string };
    source: WalletCounterpart;
    reference?: string | undefined;
    balance?: string | undefined;
    tinestamp?: string | undefined;
};

/** @internal */
export const Amount$inboundSchema: z.ZodType<Amount, z.ZodTypeDef, unknown> = z.object({
    asset: z.string(),
    amount: z.number().int(),
});

/** @internal */
export type Amount$Outbound = {
    asset: string;
    amount: number;
};

/** @internal */
export const Amount$outboundSchema: z.ZodType<Amount$Outbound, z.ZodTypeDef, Amount> = z.object({
    asset: z.string(),
    amount: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Amount$ {
    /** @deprecated use `Amount$inboundSchema` instead. */
    export const inboundSchema = Amount$inboundSchema;
    /** @deprecated use `Amount$outboundSchema` instead. */
    export const outboundSchema = Amount$outboundSchema;
    /** @deprecated use `Amount$Outbound` instead. */
    export type Outbound = Amount$Outbound;
}

/** @internal */
export const CreditWalletInput$inboundSchema: z.ZodType<CreditWalletInput, z.ZodTypeDef, unknown> =
    z.object({
        amount: z.lazy(() => Amount$inboundSchema),
        metadata: z.record(z.string()),
        source: WalletCounterpart$inboundSchema,
        reference: z.string().optional(),
        balance: z.string().optional(),
        tinestamp: z.string().optional(),
    });

/** @internal */
export type CreditWalletInput$Outbound = {
    amount: Amount$Outbound;
    metadata: { [k: string]: string };
    source: WalletCounterpart$Outbound;
    reference?: string | undefined;
    balance?: string | undefined;
    tinestamp?: string | undefined;
};

/** @internal */
export const CreditWalletInput$outboundSchema: z.ZodType<
    CreditWalletInput$Outbound,
    z.ZodTypeDef,
    CreditWalletInput
> = z.object({
    amount: z.lazy(() => Amount$outboundSchema),
    metadata: z.record(z.string()),
    source: WalletCounterpart$outboundSchema,
    reference: z.string().optional(),
    balance: z.string().optional(),
    tinestamp: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreditWalletInput$ {
    /** @deprecated use `CreditWalletInput$inboundSchema` instead. */
    export const inboundSchema = CreditWalletInput$inboundSchema;
    /** @deprecated use `CreditWalletInput$outboundSchema` instead. */
    export const outboundSchema = CreditWalletInput$outboundSchema;
    /** @deprecated use `CreditWalletInput$Outbound` instead. */
    export type Outbound = CreditWalletInput$Outbound;
}
