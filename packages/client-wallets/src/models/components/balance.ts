/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Balance = {
    name: string;
    expiresAt?: Date | undefined;
    priority?: number | undefined;
};

/** @internal */
export namespace Balance$ {
    export const inboundSchema: z.ZodType<Balance, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        expiresAt: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        priority: z.number().int().optional(),
    });

    export type Outbound = {
        name: string;
        expiresAt?: string | undefined;
        priority?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Balance> = z.object({
        name: z.string(),
        expiresAt: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        priority: z.number().int().optional(),
    });
}
