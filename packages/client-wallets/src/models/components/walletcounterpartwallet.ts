/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const WalletCounterpartWalletType = {
    Wallet: "WALLET",
} as const;
export type WalletCounterpartWalletType = ClosedEnum<typeof WalletCounterpartWalletType>;

export type WalletCounterpartWallet = {
    type: WalletCounterpartWalletType;
    identifier: string;
    balance?: string | undefined;
};

/** @internal */
export namespace WalletCounterpartWalletType$ {
    export const inboundSchema = z.nativeEnum(WalletCounterpartWalletType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace WalletCounterpartWallet$ {
    export const inboundSchema: z.ZodType<WalletCounterpartWallet, z.ZodTypeDef, unknown> =
        z.object({
            type: WalletCounterpartWalletType$.inboundSchema,
            identifier: z.string(),
            balance: z.string().optional(),
        });

    export type Outbound = {
        type: string;
        identifier: string;
        balance?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletCounterpartWallet> =
        z.object({
            type: WalletCounterpartWalletType$.outboundSchema,
            identifier: z.string(),
            balance: z.string().optional(),
        });
}
