/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type BalancesListRequest = {
    walletId: string;
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type BalancesListCursor = {
    next?: string | undefined;
    data: Array<components.Balance>;
};

/**
 * The request has succeeded.
 */
export type BalancesListResponseBody = {
    cursor: BalancesListCursor;
};

export type BalancesListResponse = {
    result: BalancesListResponseBody;
};

/** @internal */
export namespace BalancesListRequest$ {
    export const inboundSchema: z.ZodType<BalancesListRequest, z.ZodTypeDef, unknown> = z.object({
        walletId: z.string(),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });

    export type Outbound = {
        walletId: string;
        cursor?: string | undefined;
        pageSize?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BalancesListRequest> = z.object({
        walletId: z.string(),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });
}

/** @internal */
export namespace BalancesListCursor$ {
    export const inboundSchema: z.ZodType<BalancesListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(components.Balance$.inboundSchema),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.Balance$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BalancesListCursor> = z.object({
        next: z.string().optional(),
        data: z.array(components.Balance$.outboundSchema),
    });
}

/** @internal */
export namespace BalancesListResponseBody$ {
    export const inboundSchema: z.ZodType<BalancesListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => BalancesListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: BalancesListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BalancesListResponseBody> =
        z.object({
            cursor: z.lazy(() => BalancesListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace BalancesListResponse$ {
    export const inboundSchema: z.ZodType<BalancesListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => BalancesListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: BalancesListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BalancesListResponse> = z
        .object({
            result: z.lazy(() => BalancesListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
