/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type HoldsGetRequest = {
    holdId: string;
};

/**
 * The request has succeeded.
 */
export type HoldsGetResponseBody = {
    data: components.Hold;
};

/** @internal */
export namespace HoldsGetRequest$ {
    export const inboundSchema: z.ZodType<HoldsGetRequest, z.ZodTypeDef, unknown> = z.object({
        holdId: z.string(),
    });

    export type Outbound = {
        holdId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HoldsGetRequest> = z.object({
        holdId: z.string(),
    });
}

/** @internal */
export namespace HoldsGetResponseBody$ {
    export const inboundSchema: z.ZodType<HoldsGetResponseBody, z.ZodTypeDef, unknown> = z.object({
        data: components.Hold$.inboundSchema,
    });

    export type Outbound = {
        data: components.Hold$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HoldsGetResponseBody> = z.object(
        {
            data: components.Hold$.outboundSchema,
        }
    );
}
