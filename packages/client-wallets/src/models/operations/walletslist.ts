/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type WalletsListRequest = {
    name: string;
    metadata: { [k: string]: string };
    cursor?: string | undefined;
    pageSize?: number | undefined;
};

export type WalletsListCursor = {
    next?: string | undefined;
    data: Array<components.Wallet>;
};

/**
 * The request has succeeded.
 */
export type WalletsListResponseBody = {
    cursor: WalletsListCursor;
};

export type WalletsListResponse = {
    result: WalletsListResponseBody;
};

/** @internal */
export namespace WalletsListRequest$ {
    export const inboundSchema: z.ZodType<WalletsListRequest, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        metadata: z.record(z.string()),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });

    export type Outbound = {
        name: string;
        metadata: { [k: string]: string };
        cursor?: string | undefined;
        pageSize?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsListRequest> = z.object({
        name: z.string(),
        metadata: z.record(z.string()),
        cursor: z.string().optional(),
        pageSize: z.number().int().optional(),
    });
}

/** @internal */
export namespace WalletsListCursor$ {
    export const inboundSchema: z.ZodType<WalletsListCursor, z.ZodTypeDef, unknown> = z.object({
        next: z.string().optional(),
        data: z.array(components.Wallet$.inboundSchema),
    });

    export type Outbound = {
        next?: string | undefined;
        data: Array<components.Wallet$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsListCursor> = z.object({
        next: z.string().optional(),
        data: z.array(components.Wallet$.outboundSchema),
    });
}

/** @internal */
export namespace WalletsListResponseBody$ {
    export const inboundSchema: z.ZodType<WalletsListResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.lazy(() => WalletsListCursor$.inboundSchema),
        });

    export type Outbound = {
        cursor: WalletsListCursor$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsListResponseBody> =
        z.object({
            cursor: z.lazy(() => WalletsListCursor$.outboundSchema),
        });
}

/** @internal */
export namespace WalletsListResponse$ {
    export const inboundSchema: z.ZodType<WalletsListResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => WalletsListResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: WalletsListResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WalletsListResponse> = z
        .object({
            result: z.lazy(() => WalletsListResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
